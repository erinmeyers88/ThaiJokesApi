{"version":3,"sources":["../src/routes.js"],"names":["ObjectID","app","db","get","req","res","collection","find","toArray","err","returnedJokes","send","post","joke","body","insert","postedJoke","console","log","ops","id","params","jokeID","findOne","returnedJoke","put","updatedJoke","findAndModify","new","value","delete","remove","deletedJoke","userAddress","connection","remoteAddress","like","user","alreadyLikedJoke","_id","dislikedJoke","likedJoke","dislike","alreadyDislikedJoke"],"mappings":"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","file":"routes.js","sourcesContent":["import {ObjectID} from 'mongodb';\n\nexport default function (app, db) {\n\n  app.get('/', (req, res) => {\n    db.collection('jokes').find({}).toArray((err, returnedJokes) => {\n      if (err) {\n        res.send('An error has occurred.');\n      } else {\n        res.send(returnedJokes);\n      }\n    });\n  });\n\n  app.post('/', (req, res) => {\n    const joke = {joke: req.body.joke};\n    db.collection('jokes').insert(joke, (err, postedJoke) => {\n      if (err) {\n        console.log('err', err);\n        res.send({'error': 'An error has occurred.'});\n      } else {\n        res.send(postedJoke.ops[0]);\n      }\n    });\n  });\n\n  app.get('/:id', (req, res) => {\n    const id = req.params.id;\n    const jokeID = {'_id': new ObjectID(id)};\n    db.collection('jokes').findOne(jokeID, (err, returnedJoke) => {\n      if (err) {\n        res.send('An error has occurred.');\n      } else {\n        res.send(returnedJoke);\n      }\n    });\n  });\n\n  app.put('/:id', (req, res) => {\n    const id = req.params.id;\n    const jokeID = {'_id': new ObjectID(id)};\n    const updatedJoke = {joke: req.body.joke};\n    db.collection('jokes').findAndModify(jokeID, [], updatedJoke, {new: true}, (err, returnedJoke) => {\n      if (err) {\n        res.send('An error has occurred.');\n      } else {\n        res.send(returnedJoke.value);\n      }\n    });\n  });\n\n  app.delete('/:id', (req, res) => {\n    const id = req.params.id;\n    const jokeID = {'_id': new ObjectID(id)};\n    db.collection('jokes').remove(jokeID, (err, deletedJoke) => {\n      if (err) {\n        res.send('An error has occurred.')\n      } else {\n        res.send('Joke ' + id + ' successfully deleted.');\n      }\n    })\n  });\n\n  app.post('/:id/like', (req, res) => {\n\n    const id = req.params.id;\n    const jokeID = {'_id': new ObjectID(id)};\n    const userAddress = req.connection.remoteAddress;\n    const like = {user: userAddress, joke: jokeID};\n\n    db.collection('likes').findOne(like, (err, alreadyLikedJoke) => {\n      //Check if the user has already liked the joke\n      if (alreadyLikedJoke) {\n        res.send('You have already liked the joke ' + alreadyLikedJoke.joke._id)\n      } else {\n        //If the user previously disliked the joke, remove the dislike\n        db.collection('dislikes').remove(like, (err, dislikedJoke) => {\n          if (err) {\n            res.send('An error has occurred.')\n          } else {\n            //Add a like for this user and joke\n            db.collection('likes').insert(like, (err, likedJoke) => {\n              if (err) {\n                res.send('An error has occurred.')\n              } else {\n                res.send(likedJoke.ops[0]);\n              }\n            });\n          }\n        });\n      }\n    });\n\n  });\n\n  app.post('/:id/dislike', (req, res) => {\n    const id = req.params.id;\n    const jokeID = {'_id': new ObjectID(id)};\n    const userAddress = req.connection.remoteAddress;\n    const dislike = {user: userAddress, joke: jokeID};\n\n    db.collection('dislikes').findOne(dislike, (err, alreadyDislikedJoke) => {\n      //Check if the user has already disliked the joke\n      if (alreadyDislikedJoke) {\n        res.send('You have already disliked the joke ' + alreadyDislikedJoke.joke._id)\n      } else {\n        //If the user previously liked the joke, remove the like\n        db.collection('likes').remove(dislike, (err, likedJoke) => {\n          if (err) {\n            res.send('An error has occurred.')\n          } else {\n            //Add a dislike for this user and joke\n            db.collection('dislikes').insert(dislike, (err, dislikedJoke) => {\n              if (err) {\n                res.send('An error has occurred.')\n              } else {\n                res.send(dislikedJoke.ops[0]);\n              }\n            });\n          }\n        });\n      }\n    });\n\n  });\n\n};"]}